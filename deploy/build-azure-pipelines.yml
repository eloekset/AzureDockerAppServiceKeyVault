# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
    - master
    - feature/azure-pipelines
    
pool:
  vmImage: 'ubuntu-latest'
    
variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: UseDotNet@2
  displayName: ".NET Core 3.1.x"
  inputs:
    version: '3.1.x'
    packageType: sdk
- script: dotnet build ./src/AzureDockerAppServiceKeyVault.csproj --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: "Publish"
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '-r linux-x64 --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: true

- task: Bash@3
  displayName: Copy ARM template and Dockerfile to artifacts
  inputs:
    targetType: 'inline'
    script: 'cp $(Build.SourcesDirectory)/Dockerfile $(Build.ArtifactStagingDirectory) && cp $(Build.SourcesDirectory)/deploy/azuredeploy*.json $(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: "Upload Artifacts"
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    